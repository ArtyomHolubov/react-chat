{"version":3,"sources":["utils/consts.js","components/Navbar.js","components/Login.js","components/Loader.js","components/Chat.js","routes.js","components/AppRouter.js","App.js","reportWebVitals.js","index.js"],"names":["LOGIN_ROUTE","CHAT_ROUTE","Navbar","auth","useContext","Context","useAuthState","user","console","log","AppBar","position","Toolbar","variant","Grid","container","Avatar","src","photoURL","displayName","justify","Button","onClick","signOut","to","Login","login","a","provider","firebase","GoogleAuthProvider","signInWithPopup","Container","style","height","window","innerHeight","alignItems","width","background","direction","Box","p","Loader","Chat","firestore","useState","value","setValue","useCollectionData","collection","orderBy","messages","loading","sendMessage","add","uid","text","createdAt","FieldValue","serverTimestamp","marginTop","border","overflowY","map","message","margin","marginLeft","padding","TextField","fullWidth","rowsMax","onChange","e","target","publicRoutes","path","Component","privateRoutes","AppRouter","component","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","createContext","ReactDOM","render","StrictMode","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.31dc6a92.chunk.js","sourcesContent":["export const LOGIN_ROUTE = '/login';\nexport const CHAT_ROUTE = '/chat';\n","import React, {useContext} from 'react';\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport {Avatar, Button, Grid} from \"@material-ui/core\";\nimport {NavLink} from \"react-router-dom\";\nimport {LOGIN_ROUTE} from \"../utils/consts\";\nimport {Context} from \"../index\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\n\nconst Navbar = () => {\n    const {auth} = useContext(Context)\n    const [user] = useAuthState(auth)\n    // eslint-disable-next-line no-console\n    console.log('user', user);\n\n    return (\n        <AppBar position=\"static\">\n            <Toolbar variant={\"dense\"}>\n                {!!user && <Grid container>\n                    <Avatar src={user.photoURL}/>\n                    <div>{user.displayName}</div>\n                </Grid>}\n                <Grid container justify={\"flex-end\"}>\n                    {user ?\n                        <Button onClick={() => auth.signOut()} variant={\"outlined\"}>Выйти</Button>\n                        :\n                        <NavLink to={LOGIN_ROUTE}>\n                            <Button variant={\"outlined\"}>Логин</Button>\n                        </NavLink>\n                    }\n                </Grid>\n            </Toolbar>\n        </AppBar>\n    );\n};\n\nexport default Navbar;\n","import React, {useContext} from 'react';\nimport {Button, Container, Grid} from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\nimport {Context} from \"../index\";\nimport firebase from \"firebase\";\n\n\nconst Login = () => {\n    const {auth} = useContext(Context)\n\n    const login = async () => {\n        const provider = new firebase.auth.GoogleAuthProvider()\n        const {user} = await auth.signInWithPopup(provider)\n        console.log(user)\n    }\n\n    return (\n        <Container>\n            <Grid container\n                  style={{height: window.innerHeight - 50}}\n                  alignItems={\"center\"}\n                  justify={\"center\"}\n            >\n                <Grid style={{width:400, background: 'lightgray'}}\n                      container\n                      alignItems={\"center\"}\n                      direction={\"column\"}\n                >\n                    <Box p={5}>\n                        <Button onClick={login} variant={\"outlined\"}>Войти с помощью Google</Button>\n                    </Box>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n};\n\nexport default Login;\n","import React from 'react';\nimport {Container, Grid} from \"@material-ui/core\";\n\nconst Loader = () => {\n    return (\n        <Container>\n            <Grid container\n                  style={{height: window.innerHeight - 50}}\n                  alignItems={\"center\"}\n                  justify={\"center\"}\n            >\n                <Grid\n                    container\n                    alignItems={\"center\"}\n                    direction={\"column\"}\n                >\n                    {/*<div className=\"lds-hourglass\"></div>*/}\n                    Loading...\n                </Grid>\n            </Grid>\n        </Container>\n    );\n};\n\nexport default Loader;\n","import React, {useContext, useState} from 'react';\nimport {Context} from \"../index\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {Avatar, Button, Container, Grid} from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport {useCollectionData} from \"react-firebase-hooks/firestore\";\nimport Loader from \"./Loader\";\nimport firebase from \"firebase\";\n\nconst Chat = () => {\n    const {auth, firestore} = useContext(Context)\n    const [user] = useAuthState(auth)\n    const [value, setValue] = useState('')\n    const [messages, loading] = useCollectionData(\n        firestore.collection('messages').orderBy('createdAt')\n    )\n\n    const sendMessage = async () => {\n        firestore.collection('messages').add({\n            uid: user.uid,\n            displayName: user.displayName,\n            photoURL: user.photoURL,\n            text: value,\n            createdAt: firebase.firestore.FieldValue.serverTimestamp()\n        })\n        setValue('')\n    }\n\n    if (loading) {\n        return <Loader/>\n    }\n\n    return (\n        <Container>\n            <Grid container\n                  justify={\"center\"}\n                  style={{height: window.innerHeight - 50, marginTop: 20}}>\n                <div style={{width: '80%', height: '60vh', border: '1px solid gray', overflowY: 'auto'}}>\n                    {messages.map(message =>\n                        <div style={{\n                            margin: 10,\n                            border: user.uid === message.uid ? '2px solid green' : '2px dashed red',\n                            marginLeft: user.uid === message.uid ? 'auto' : '10px',\n                            width: 'fit-content',\n                            padding: 5,\n                        }}>\n                            <Grid container>\n                                <Avatar src={message.photoURL}/>\n                                <div>{message.displayName}</div>\n                            </Grid>\n                            <div>{message.text}</div>\n                        </div>\n                    )}\n                </div>\n                <Grid\n                    container\n                    direction={\"column\"}\n                    alignItems={\"flex-end\"}\n                    style={{width: '80%'}}\n                >\n                    <TextField\n                        fullWidth\n                        rowsMax={2}\n                        variant={\"outlined\"}\n                        value={value}\n                        onChange={e => setValue(e.target.value)}\n                    />\n                    <Button onClick={sendMessage} variant={\"outlined\"}>Отправить</Button>\n                </Grid>\n            </Grid>\n        </Container>\n    );\n};\n\nexport default Chat;\n","import {CHAT_ROUTE, LOGIN_ROUTE} from \"./utils/consts\";\nimport Login from \"./components/Login\";\nimport Chat from \"./components/Chat\";\n\nexport const publicRoutes = [\n    {\n        path: LOGIN_ROUTE,\n        Component: Login\n    }\n];\n\nexport const privateRoutes = [\n    {\n        path: CHAT_ROUTE,\n        Component: Chat\n    }\n];\n","import React, {useContext} from 'react';\nimport {Route, Switch, Redirect} from 'react-router-dom'\nimport {privateRoutes, publicRoutes} from \"../routes\";\nimport {CHAT_ROUTE, LOGIN_ROUTE} from \"../utils/consts\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport {Context} from \"../index\";\n\nconst AppRouter = () => {\n    const {auth} = useContext(Context)\n    const [user] = useAuthState(auth)\n\n    return user ?\n        (\n            <Switch>\n                {privateRoutes.map(({path, Component}) =>\n                    <Route key={path} path={path} component={Component} exact={true}/>\n                )}\n                <Redirect to={CHAT_ROUTE}/>\n            </Switch>\n        )\n        :\n        (\n            <Switch>\n                {publicRoutes.map(({path, Component}) =>\n                    <Route key={path} path={path} component={Component} exact={true}/>\n                )}\n                <Redirect to={LOGIN_ROUTE}/>\n            </Switch>\n        )\n};\n\nexport default AppRouter;\n","import React, {useContext} from 'react';\nimport {HashRouter as Router} from 'react-router-dom'\nimport Navbar from \"./components/Navbar\";\nimport AppRouter from \"./components/AppRouter\";\nimport './App.css'\nimport {Context} from \"./index\";\nimport {useAuthState} from \"react-firebase-hooks/auth\";\nimport Loader from \"./components/Loader\";\n\nconst App = () => {\n    const {auth} = useContext(Context)\n    const [user, loading, error] = useAuthState(auth)\n\n    if (loading) {\n        return <Loader/>\n    }\n\n    return (\n        <Router>\n            <Navbar/>\n            <AppRouter/>\n        </Router>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, {createContext} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Import the functions you need from the SDKs you need\nimport firebase from \"firebase/app\";\n// import { getAnalytics } from \"firebase/analytics\";\nimport 'firebase/firestore';\nimport 'firebase/auth'\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyB7Wz5lOVLcqmfQxBFtqf_uwyElH3GoItk\",\n    authDomain: \"chat-react-dcdce.firebaseapp.com\",\n    projectId: \"chat-react-dcdce\",\n    storageBucket: \"chat-react-dcdce.appspot.com\",\n    messagingSenderId: \"817208636060\",\n    appId: \"1:817208636060:web:c7033867a12972b6567359\",\n    measurementId: \"G-XYV8M2ELR5\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n// const analytics = getAnalytics(app);\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\n\nexport const Context = createContext(null);\n\nReactDOM.render(\n    <React.StrictMode>\n        <Context.Provider value={{\n            firebase,\n            auth,\n            firestore\n        }}>\n            <App/>\n        </Context.Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}